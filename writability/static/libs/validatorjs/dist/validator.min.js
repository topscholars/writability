/*! validatorjs - v1.0.0 - https://github.com/skaterdav85/validatorjs - 2013-10-01 */(function(){function t(){for(var e,r,n,i,a,u=arguments[0]||{},s=1,o=arguments.length;o>s;s++)if(null!=(i=arguments[s]))for(n in i)e=u[n],r=i[n],u!==r&&(r&&"object"==typeof r?(a=e&&"object"==typeof e?e:{},u[n]=t(a,r)):void 0!==r&&(u[n]=r));return u}function e(e,r){return t({},e,r)}Array.prototype.forEach||(Array.prototype.forEach=function(t,e){"use strict";var r,n;for(r=0,n=this.length;n>r;++r)r in this&&t.call(e,this[r],r,this)});var r={accepted:"The :attribute must be accepted.",alpha:"The :attribute field must contain only alphabetic characters.",alpha_dash:"The :attribute field may only contain alpha-numeric characters, as well as dashes and underscores.",alpha_num:"The :attribute field must be alphanumeric.",confirmed:"The :attribute confirmation does not match.",email:"The :attribute format is invalid.",def:"The :attribute attribute has errors.",different:"The :attribute and :different must be different.","in":"The selected :attribute is invalid.",integer:"The :attribute must be an integer.",min:{numeric:"The :attribute must be at least :min.",string:"The :attribute must be at least :min characters."},max:{numeric:"The :attribute must be less than :max.",string:"The :attribute must be less than :max characters."},not_in:"The selected :attribute is invalid.",numeric:"The :attribute must be a number.",required:"The :attribute field is required.",same:"The :attribute and :same fields must match.",size:{numeric:"The :attribute must be :size.",string:"The :attribute must be :size characters."},url:"The :attribute format is invalid."},n=function(){};n.prototype={constructor:n,get:function(t){return this[t]?this[t]:[]},first:function(t){return this[t]?this[t][0]:!1}};var i=function(t,i,a){this.input=t,this.rules=i,this.messages=e(r,a||{}),this.errors=new n,this.errorCount=0,this.check()};i.prototype={constructor:i,_createMessage:function(t,e){var r,n;if("string"==typeof t&&"object"==typeof e){r=t;for(n in e)e.hasOwnProperty(n)&&(r=r.replace(":"+n,e[n]))}return r},check:function(){var t=this;this._each(this.rules,function(e){var r=this.rules[e].split("|"),n=this.input[e];r.forEach(function(r){var i,a,u,s,o=t._extractRuleAndRuleValue(r),c=o.rule,f=o.ruleValue;i=t.validate[c].call(t,n,f,e),i||(t.errors.hasOwnProperty(e)||(t.errors[e]=[]),a=t._createErrorMessageTemplateData(e,c,f),u=t._selectMessageTemplate(c,n,e),s=t._createMessage(u,a),t._addErrorMessage(e,s))})},this)},_each:function(t,e,r){for(var n in t)e.call(r,n)},_extractRuleAndRuleValue:function(t){var e,r={};return r.rule=t,t.indexOf(":")>=0&&(e=t.split(":"),r.rule=e[0],r.ruleValue=e[1]),r},_addErrorMessage:function(t,e){this.errors[t].push(e),this.errorCount++},_createErrorMessageTemplateData:function(t,e,r){var n={attribute:t};return n[e]=r,n},_selectMessageTemplate:function(t,e,r){var n,i=this.messages;if(i.hasOwnProperty(t+"."+r))n=i[t+"."+r];else if(i.hasOwnProperty(t)){if(n=i[t],"object"==typeof n)switch(typeof e){case"number":n=n.numeric;break;case"string":n=n.string}}else n=i.def;return n},passes:function(){return 0===this.errorCount?!0:!1},fails:function(){return this.errorCount>0?!0:!1},validate:{required:function(t){var e;return void 0===t||null===t?!1:(e=(t+"").replace(/\s/g,""),e.length>0?!0:!1)},size:function(t,e){return t?(e=parseFloat(e),"number"==typeof t?t===e?!0:!1:t.length===e?!0:!1):!0},min:function(t,e){return void 0===t||""===t?!0:"number"==typeof t?t>=e?!0:!1:t.length>=e?!0:!1},max:function(t,e){return void 0===t||""===t?!0:"number"==typeof t?e>=t?!0:!1:e>=t.length?!0:!1},email:function(t){return void 0===t||""===t?!0:/\w+@\w{2,}\.\w{2,}/.test(t)},numeric:function(t){var e;return void 0===t||""===t?!0:(e=Number(t),"number"!=typeof e||isNaN(e)||"boolean"==typeof t?!1:!0)},url:function(t){return void 0===t||""===t?!0:/^https?:\/\/\S+/.test(t)},alpha:function(t){return void 0===t||""===t?!0:/^[a-zA-Z]+$/.test(t)},alpha_dash:function(t){return void 0===t||""===t?!0:/^[a-zA-Z0-9_\-]+$/.test(t)},alpha_num:function(t){return void 0===t||""===t?!0:/^[a-zA-Z0-9]+$/.test(t)},same:function(t,e){var r=this.input[e],n=t;return r===n?!0:!1},different:function(t,e){var r=this.input[e],n=t;return r!==n?!0:!1},"in":function(t,e){var r,n,i;if(t){r=e.split(","),n=r.length,i=!1,t+="";for(var a=0;n>a;a++)if(t===r[a]){i=!0;break}return i}return!0},not_in:function(t,e){var r=e.split(","),n=r.length,i=!0;t+="";for(var a=0;n>a;a++)if(t===r[a]){i=!1;break}return i},accepted:function(t){return"on"===t||"yes"===t||1===t||"1"===t?!0:!1},confirmed:function(t,e,r){var n=r+"_confirmation";return this.input[n]===t?!0:!1},integer:function(t){return void 0===t||""===t?!0:(t+="",/^\d+$/.test(t)?!0:!1)}}},i.register=function(t,e,n){this.prototype.validate[t]=e,r[t]="string"==typeof n?n:r.def},"undefined"!=typeof module&&"undefined"!=typeof require?module.exports=i:window.Validator=i})();